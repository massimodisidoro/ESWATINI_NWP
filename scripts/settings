#!/usr/bin/bash


#python path (from anaconda installation)
export python=/home/enwp/forecast_system/libs/anaconda3/wrf-python/bin/python



export omp_wps_threads=2 
export nprocs_wrf=48  #192
export omp_wrf_threads=2

#once establishd the $root_dir, al other folders are automatically defined
# we establish the forecast system is under /home/enwp/forecast_system/ :
export dir_root="/home/enwp/forecast_system/"

export dir_master="$dir_root/ESWATINI_NWP"
export dir_wrf_code="$dir_root/wrf_code/WRF-4.2.2"
export dir_script="$dir_master/scripts"
export dir_namelist="$dir_master/namelists"
export dir_exe="$dir_master/bin"
export dir_post="$dir_master/postprocessing"

export dir_input="$dir_root/INPUT"
export dir_geogrid_files="$dir_input/geogrid_files"
export dir_input_meteo="$dir_input/gfs"
export dir_input_sst="$dir_input/sst"
export dir_wrf_static_data="$dir_root/wrf_static_data"
export dir_wrf_lookup_tables="$dir_wrf_code/run"


export dir_archive="$dir_root/OUT_ARCHIVE"

export gfs_res=0p50 #0p50 0p25  #gfs resolution fields in decimal defgrees

#forecast length in hours
export forecast_length=48  # forecast length in hours (at least 24h!)
export wrf_timestep=30 #model timestep in seconds
export adaptive_timestep=true # if true wrf_timestep is overrided (more stable)
export met_em_freq=3 #hours between met_em files

# settings for graphical outputs
# Note that maps are plotted starting at init_time +3 (model spin-up time)
export deltastep_maps=3 # setp in hours for the maps to be produced
# please, edit the tslist file in the directory:
# /home/enwp/forecast_system/ESWATINI_NWP/postprocessing
# to choose the geographcal points where meteograms and
# profiled must be automatically produced in output
