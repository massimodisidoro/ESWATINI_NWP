#!/usr/bin/bash


#python path (from anaconda installation)
export python=/storage/forecast_system/libs/anaconda3/wrf-python/bin/python


#once establishd the $root_dir, al other folders are automatically defined
# we establish the forecast system is under /storage/forecast_system/ :
export dir_root="/storage/forecast_system/"

# do not modify the directory tree
export dir_master="$dir_root/ESWATINI_NWP"
export dir_wrf_code="$dir_root/wrf_code/WRF-4.2.2"
export dir_script="$dir_master/scripts"
export dir_namelist="$dir_master/namelists"
export dir_exe="$dir_master/bin"
export dir_post="$dir_master/postprocessing"

#input data folders. do not modify
export dir_input="$dir_root/INPUT"
export dir_geogrid_files="$dir_input/geogrid_files"
export dir_input_meteo="$dir_input/gfs"
export dir_input_sst="$dir_input/sst"
export dir_wrf_static_data="$dir_root/wrf_static_data"
export dir_wrf_lookup_tables="$dir_wrf_code/run"


# settings for parallel processes: do not modify
export omp_wps_threads=2 
export omp_wrf_threads=1
#number of wrf parallel cores retrieved from hostfile file.
export nprocs_wrf=`cat $dir_script/hostfile |wc -l`

# dir_archive is the folder in which the outputs (model files and
# grapgics) are stored
export dir_archive="$dir_root/OUT_ARCHIVE"

# 0.50 degree gfs data to be download for IC and BC for WRF
export gfs_res=0p50 

#forecast length in hours
  # 48h is optimal. 
  export forecast_length=48  # forecast length in hours (at least 24h!)

#model computational timesteps
  export wrf_timestep=30 #model timestep in seconds
  # adative timestep option makes the numerics more stable, but longer
  # integration time.
  # put adaptive_timestep=true if instabilities cause model to crash 
  export adaptive_timestep=false 
  export met_em_freq=3 #hours between met_em (boundary) files do not modify it

# SETTINGS FOR GRAPHICAL OUTPUTs
# Note that maps are plotted starting at init_time +3 (model spin-up time)
  # deltastep_maps: step in hours for the maps to be produced. 1= one map per
  # hour 3= one map every 3 hours ...
  export deltastep_maps=3 
# METEOGRAMS sites:
  # please, read README_TSLIST and edit the tslist file in the directory:
  # /storage/forecast_system/ESWATINI_NWP/postprocessing
  # to choose the geographcal points where meteograms and
  # profiled must be automatically produced in output
# REMOTE MACHINE AND FOLDER WHERE GRAPHICS IS UPLOADED
  export RCLONE_CONFIG=$dir_namelist/rclone.conf

  # the remote machine name is that related to "rclone config" configuration
  ##PLEASE NOTE THAT, FOR THE TRANSFER TO WORK,
  ## THE REMOTE MACHINA MUST HAVE INSTALLED AND ACTIVE OpenSSH CLIENT AND SERVER
  remote_machine=new_remote
  remote_folder_path="C:/Users/sives/Desktop/ENEA"
  # remove old folders in the remote machine. 
  # remove folders older than remote_folder_age days
  # use an integer number indicating the days (e.g. 2= removes folder older than 2 days)
  remote_folder_age=3

#clean archive
  # remove archived files older than $clear_older_days days
  # number can be changed up to a value that allows maximum storage occupation
  # Note that the total storage space is around 145TB and one year
  # of forecasts (00UTC and 12UTC) occupies about 6TB
  clear_older_days=365
